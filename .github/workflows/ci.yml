name: Build and test pgcachewatch

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  ci:

    strategy:
      fail-fast: false
      matrix:
        # python-version: ["3.10", "3.11", "3.12"]
        python-version: ["3.12"]
        # postgres-version: ["14", "15", "16"]
        # postgres-version: ["16"]
        # os: ["ubuntu-latest"]
        os: ["ubuntu-latest", "windows-latest", "macos-latest"]

    name: PY ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - uses: ikalnytskyi/action-setup-postgres@v5
        with:
          username: testuser
          password: testpassword
          port: 5432

      - name: Populate DB
        shell: bash
        run: |
          PGUSER=testuser \
          PGPASSWORD=testpassword \
          PGHOST=127.0.0.1 \
          ./tests/db/init_db.sh

      - name: Install pgcachewatch
        shell: bash
        run: |
          pip install pip -U
          pip install .[dev]

      - name: Full test
        shell: bash
        run: pytest -v

  check:
    name: Check test matrix passed.
    needs: ci
    runs-on: ubuntu-latest
    steps:
      - name: Check status
        run: echo "All tests passed; ready to merge."
